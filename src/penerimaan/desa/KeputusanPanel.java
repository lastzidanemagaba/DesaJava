/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package penerimaan.desa;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Imul
 */
public class KeputusanPanel extends javax.swing.JPanel {

    DbConnection dc = new DbConnection("penerimaan_desa");
    private String[][] allData;
    private String[] selData;
    private TableRowSorter<TableModel> rowSorter;

    /**
     * Creates new form CalculationPanel
     */
    public KeputusanPanel() {
        initComponents();
        setTable();
        rowSorter=new TableRowSorter<>(tblWarga.getModel());
    }
    
    public int countRowRs(ResultSet rs) throws SQLException{
        rs.last();
        int count=rs.getRow();
        rs.beforeFirst();
        return count;
    }
    
    public void getData(){
        String[][] member;
        try{
            Statement st = dc.con.createStatement();
            ResultSet rs=st.executeQuery("SELECT * FROM `history` ORDER BY bobot_kesimpulan DESC");
            allData =new String[countRowRs(rs)][8];
            for(int i=0;rs.next();i++){
                allData[i][0]=rs.getString("id");
                allData[i][1]= Integer.toString(i+1);
                allData[i][2]=rs.getString("nama");
                allData[i][3]=rs.getString("luas_lahan");
                allData[i][4]=rs.getString("jumlah_tanggungan_keluarga");
                allData[i][5]=rs.getString("pendapatan");
                allData[i][6]=rs.getString("kesimpulan");
            }            
        }catch(SQLException e){
            System.out.println("Error : "+e);
            allData=new String[0][0];
        }
    }
    public String[] getHistory(String[][] mData, int id){
        String[] member= new String[4];
        for(String[] item:mData){
            if(Integer.parseInt(item[0])==id){
                member=item;
                break;
            }
        }
        return member;
    }
    
    public void setColumnTable(DefaultTableModel model){ 
        model.addColumn("id");       
        model.addColumn("No");
        model.addColumn("Nama Kepala Rumah Tangga");
        model.addColumn("Luas Lahan");
        model.addColumn("Jumlah Tanggungan Keluarga");
        model.addColumn("Pendapatan");
        model.addColumn("Keputusan");
    }
    public void setColumnModel(TableColumnModel columnModel){  
        columnModel.getColumn(0).setPreferredWidth(0);
        columnModel.getColumn(0).setMinWidth(0);
        columnModel.getColumn(0).setMaxWidth(0);      
        columnModel.getColumn(1).setPreferredWidth(30);
        columnModel.getColumn(2).setPreferredWidth(200);
        columnModel.getColumn(3).setPreferredWidth(150);
        columnModel.getColumn(4).setPreferredWidth(150);
        columnModel.getColumn(5).setPreferredWidth(150);
        columnModel.getColumn(6).setPreferredWidth(150);
    }
    public void setTable(){
        getData();
        String[][] data = allData;
        DefaultTableModel table= new DefaultTableModel();
        setColumnTable(table);
        tblWarga.setModel(table);        
        TableColumnModel columnModel=tblWarga.getColumnModel();
        setColumnModel(columnModel);        
        tblWarga.setColumnModel(columnModel);  
        for (String[] data1 : data) {            
            table.addRow(new Object[]{data1[0], data1[1], data1[2], data1[3], data1[4], data1[5], data1[6], data1[7]});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jPanel12 = new javax.swing.JPanel();
        btnProses = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWarga = new javax.swing.JTable();
        txtCari = new javax.swing.JLabel();
        txtKeyWord = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        btnProses.setText("Proses");
        btnProses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProsesActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(btnProses)
                .addGap(2, 2, 2)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCetak)
                .addGap(0, 420, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProses)
                    .addComponent(btnReset)
                    .addComponent(btnCetak))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jToolBar1.add(jPanel12);

        tblWarga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        tblWarga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblWargaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblWarga);

        txtCari.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCari.setText("Cari :");
        txtCari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCariMouseClicked(evt);
            }
        });

        txtKeyWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKeyWordKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCari))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProsesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProsesActionPerformed
        // TODO add your handling code here:
        for (String[] data : allData) {
            String idData = data[0];
            double luasLahan = Double.parseDouble(data[3]);
            double tanggungan = Double.parseDouble(data[4]);
            double pendapatan = Double.parseDouble(data[5]);
            Fuzzification f = new Fuzzification();
            double hasil = f.calculation(luasLahan, tanggungan, pendapatan);
            String layak = hasil > 50 ? "Layak":"Tidak Layak";
            try{
                Statement st = dc.con.createStatement();
                st.executeUpdate("UPDATE `history` SET `bobot_kesimpulan` = "+hasil+", `kesimpulan` = '"+layak+"' WHERE `history`.`id` = "+idData);
                this.setTable();
            }catch(SQLException e){
                System.out.println("Error : "+e);
            }
        }
    }//GEN-LAST:event_btnProsesActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        for (String[] data : allData) {
            String idData = data[0];
            try{
                Statement st = dc.con.createStatement();
                st.executeUpdate("UPDATE `history` SET `bobot_kesimpulan` = 0, `kesimpulan` = NULL WHERE `history`.`id` = "+idData);
                this.setTable();
            }catch(SQLException e){
                System.out.println("Error : "+e);
            }
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblWargaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblWargaMouseClicked
        String selId=tblWarga.getValueAt(tblWarga.getSelectedRow(),0).toString();
        selData=getHistory(allData,Integer.parseInt(selId));
    }//GEN-LAST:event_tblWargaMouseClicked

    private void txtCariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCariMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariMouseClicked

    private void txtKeyWordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyWordKeyReleased
        if(txtKeyWord.getText().equals("")) tblWarga.setRowSorter(null);
        else{
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtKeyWord.getText()));
            tblWarga.setRowSorter(rowSorter);
        }
    }//GEN-LAST:event_txtKeyWordKeyReleased

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        // TODO add your handling code here:
        XSSFWorkbook workbook = new XSSFWorkbook();
        
        XSSFSheet sheet = workbook.createSheet("History");
        // Create a Font for styling header cells
        Font headerFont = workbook.createFont();
        headerFont.setBold(true);

        // Create a CellStyle with the font
        CellStyle headerCellStyle = workbook.createCellStyle();
        headerCellStyle.setFont(headerFont);
        headerCellStyle.setBorderBottom(BorderStyle.THIN);
        headerCellStyle.setBorderTop(BorderStyle.THIN);
        headerCellStyle.setBorderRight(BorderStyle.THIN);
        headerCellStyle.setBorderLeft(BorderStyle.THIN);

        Row rowTitle = sheet.createRow(0);
        
        Cell cellTitle = rowTitle.createCell(0);
        cellTitle.setCellValue("Kantor Kepala Desa Kasreman");
        CellStyle styleTitle = workbook.createCellStyle();
        Font titleFont = workbook.createFont();
        titleFont.setBold(true);
        titleFont.setFontHeightInPoints((short) 16);
        styleTitle.setFont(titleFont);
        styleTitle.setAlignment(HorizontalAlignment.CENTER);
        styleTitle.setVerticalAlignment(VerticalAlignment.CENTER);
        cellTitle.setCellStyle(styleTitle);
        sheet.addMergedRegion(new CellRangeAddress(0,1,0,10));
        
        Row rowStart = sheet.createRow(2);
        
        Cell cellNo = rowStart.createCell(0);
        cellNo.setCellValue("No");
        cellNo.setCellStyle(headerCellStyle);
        
        Cell cellRumah = rowStart.createCell(1);
        cellRumah.setCellValue("Nama Kepala Rumah Tangga");
        cellRumah.setCellStyle(headerCellStyle);
        
        Cell cellTabungan = rowStart.createCell(2);
        cellTabungan.setCellValue("Nomor Identitas");
        cellTabungan.setCellStyle(headerCellStyle);
        
        Cell cellRtRw = rowStart.createCell(3);
        cellRtRw.setCellValue("RT/RW");
        cellRtRw.setCellStyle(headerCellStyle);
        
        Cell cellDesa = rowStart.createCell(4);
        cellDesa.setCellValue("Desa");
        cellDesa.setCellStyle(headerCellStyle);
        
        Cell cellKecamatan = rowStart.createCell(5);
        cellKecamatan.setCellValue("Kecamatan");
        cellKecamatan.setCellStyle(headerCellStyle);
        
        Cell cellLuasLahan = rowStart.createCell(6);
        cellLuasLahan.setCellValue("Luas Lahan");
        cellLuasLahan.setCellStyle(headerCellStyle);
        
        Cell cellJumlahTanggunganKeluarga = rowStart.createCell(7);
        cellJumlahTanggunganKeluarga.setCellValue("Jumlah Tanggungan Keluarga");
        cellJumlahTanggunganKeluarga.setCellStyle(headerCellStyle);
        
        Cell cellPekerjaan = rowStart.createCell(8);
        cellPekerjaan.setCellValue("Pekerjaan");
        cellPekerjaan.setCellStyle(headerCellStyle);
        
        Cell cellPenapatan = rowStart.createCell(9);
        cellPenapatan.setCellValue("Pendapatan");
        cellPenapatan.setCellStyle(headerCellStyle);
        
        Cell cellKesimpulan = rowStart.createCell(10);
        cellKesimpulan.setCellValue("Keputusan");
        cellKesimpulan.setCellStyle(headerCellStyle);
        
        int rownum = 3;
        
        CellStyle cellStyle = workbook.createCellStyle();
        cellStyle.setBorderBottom(BorderStyle.THIN);
        cellStyle.setBorderTop(BorderStyle.THIN);
        cellStyle.setBorderRight(BorderStyle.THIN);
        cellStyle.setBorderLeft(BorderStyle.THIN);
        Statement st;
        try {
            st = dc.con.createStatement();
        ResultSet rs= st.executeQuery("select * from history");
        for(int i=0;rs.next();i++){
            String[] data = new String[11];
            data[0] = Integer.toString(rownum);
            data[1] = rs.getString("nama");
            data[2] = rs.getString("nomor");
            data[3] = rs.getString("rt_rw");
            data[4] = rs.getString("desa");
            data[5] = rs.getString("kecamatan");
            data[6] = rs.getString("luas_lahan");
            data[7] = rs.getString("jumlah_tanggungan_keluarga");
            data[8] = rs.getString("pekerjaan");
            data[9] = rs.getString("pendapatan");      
            data[10] = rs.getString("kesimpulan");
            Row row = sheet.createRow(rownum);
            int cellnum = 0;
            for (String value : data) {
                if(cellnum < 11){
                    Cell cell = row.createCell(cellnum++);
                    cell.setCellValue((String) value);
                    cell.setCellStyle(cellStyle);
                }
            }
            rownum++;
        }    
        } catch (SQLException ex) {
            Logger.getLogger(KeputusanPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Row footerRow = sheet.createRow(rownum+1);
        Cell footerCell = footerRow.createCell(10);
        footerCell.setCellValue("Kepala Desa Kasreman");
        footerCell.setCellStyle(cellStyle);
        sheet.addMergedRegion(new CellRangeAddress(rownum+2, rownum+4, 10, 10));
        for(int i=2; i<=4; i++){
            Row ttdRow = sheet.createRow(rownum+i);
            Cell ttdCell = ttdRow.createCell(10);
            ttdCell.setCellValue(" ");
            ttdCell.setCellStyle(cellStyle);
        }
        
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showSaveDialog(this);
        if(returnVal== JFileChooser.APPROVE_OPTION){
            try {
                FileOutputStream fileOut;
                if(chooser.getSelectedFile().getName().endsWith(".xlsx")){
                    fileOut = new FileOutputStream(chooser.getSelectedFile());
                }else{
                    fileOut = new FileOutputStream(chooser.getSelectedFile()+".xlsx");
                }
                workbook.write(fileOut);
                fileOut.close();
                // Closing the workbook
                workbook.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(KeputusanPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(KeputusanPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCetakActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnProses;
    private javax.swing.JButton btnReset;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblWarga;
    private javax.swing.JLabel txtCari;
    private javax.swing.JTextField txtKeyWord;
    // End of variables declaration//GEN-END:variables
}
